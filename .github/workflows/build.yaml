name: build
on:
  workflow_dispatch: { }
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - uses: bluefireteam/melos-action@main

      - run: melos run format-check
      - run: melos run analyze
      - run: melos run test

  web:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v3

      - uses: nanasess/setup-chromedriver@v1

      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - uses: bluefireteam/melos-action@main

      - name: Example app - Build Web app
        working-directory: ./packages/audioplayers/example
        run: |
          flutter build web

      - name: Run Flutter integration tests
        working-directory: ./packages/audioplayers/example
        run: |
          export DISPLAY=:99
          chromedriver --port=4444 &
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional
          
          flutter drive \
           --driver=test_driver/integration_test.dart \
           --target=integration_test/app_test.dart \
           -d web-server --web-browser-flag="--autoplay-policy=no-user-gesture-required"

  android:
    runs-on: macOS-latest
    timeout-minutes: 60
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - uses: bluefireteam/melos-action@main

      - name: Example App - Build Android APK
        working-directory: ./packages/audioplayers/example
        run: |
          flutter build apk --release

      - name: Run Android unit tests
        working-directory: ./packages/audioplayers/example/android
        run: |
          ./gradlew test

      - name: Download Android emulator image
        run: |
          export ANDROID_TOOLS="$ANDROID_HOME/cmdline-tools/latest/bin"
          echo "y" | $ANDROID_TOOLS/sdkmanager --install "system-images;android-30;aosp_atd;x86"
          echo "no" | $ANDROID_TOOLS/avdmanager create avd --force --name emu --device "Nexus 5X" -k 'system-images;android-30;aosp_atd;x86'
          $ANDROID_HOME/emulator/emulator -list-avds
      - name: Start Android emulator
        timeout-minutes: 10
        run: |
          export ANDROID_TOOLS="$ANDROID_HOME/cmdline-tools/latest/bin"
          echo "Starting emulator"
          $ANDROID_TOOLS/sdkmanager "platform-tools" "platforms;android-30"
          nohup $ANDROID_HOME/emulator/emulator -avd emu -no-audio -no-snapshot -no-window &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
          $ANDROID_HOME/platform-tools/adb devices
          echo "Emulator started"
      - name: Run Flutter integration tests
        working-directory: ./packages/audioplayers/example
        run: "flutter test integration_test"

  ios:
    runs-on: macOS-latest
    timeout-minutes: 60
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - uses: bluefireteam/melos-action@main

      - name: List all simulators
        run: "xcrun simctl list devices"
      - name: Start simulator
        run: |
          UDID=$(xcrun simctl list devices | grep "iPhone" | sed -n 1p | awk -F '\\)? \\(' '{ print $2 }')
          echo "Using simulator $UDID"
          xcrun simctl boot "${UDID:?No Simulator with this name iPhone found}"

      - name: Example app - Build iOS
        working-directory: ./packages/audioplayers/example
        run: |
          flutter build ios --release --no-codesign
      - name: Run Flutter integration tests
        working-directory: ./packages/audioplayers/example
        run: "flutter test integration_test"

  macos:
    runs-on: macOS-latest
    timeout-minutes: 30
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - uses: bluefireteam/melos-action@main

      - name: setup-cocoapods
        uses: maxim-lobanov/setup-cocoapods@v1
        with:
          podfile-path: ./packages/audioplayers/example/macos/Podfile.lock
      - name: Example app - Build macOS
        working-directory: ./packages/audioplayers/example
        run: |
          flutter config --enable-macos-desktop
          flutter build macos --release
      - name: Run Flutter integration tests
        working-directory: ./packages/audioplayers/example
        run: "flutter test -d macos integration_test"

  windows:
    runs-on: windows-latest
    timeout-minutes: 30
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - uses: bluefireteam/melos-action@main
      - name: Example app - Build Windows app
        working-directory: ./packages/audioplayers/example
        run: |
          flutter build windows --release
      - name: Start audio server
        run: net start audiosrv
      - name: Install virtual audio device
        shell: powershell
        run: |
          Invoke-WebRequest https://github.com/duncanthrax/scream/releases/download/3.9/Scream3.9.zip -OutFile Scream3.9.zip
          Expand-Archive -Path Scream3.9.zip -DestinationPath Scream
          Import-Certificate -FilePath Scream\Install\driver\x64\Scream.cat -CertStoreLocation Cert:\LocalMachine\TrustedPublisher 
          Scream\Install\helpers\devcon-x64.exe install Scream\Install\driver\x64\Scream.inf *Scream
      - name: Run Flutter integration tests
        working-directory: ./packages/audioplayers/example
        run: "flutter test -d windows integration_test"

  linux:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - uses: bluefireteam/melos-action@main
      - name: Install Flutter requirements for Linux
        run: |
          sudo apt-get update
          sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
      - name: Install GStreamer
        run: sudo apt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev gstreamer1.0-plugins-good gstreamer1.0-plugins-bad
      - name: Example app - Build Linux app
        working-directory: ./packages/audioplayers/example
        run: |
          flutter config --enable-linux-desktop
          flutter build linux --release
      - name: Run Flutter integration tests
        working-directory: ./packages/audioplayers/example
        run: |
          export DISPLAY=:99
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
          flutter test -d linux integration_test
