name: build
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          channel: stable
      - uses: bluefireteam/melos-action@main

      - run: melos run format-check
      - run: melos run analyze
      - run: melos run test

  web:
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v1

     - uses: nanasess/setup-chromedriver@v1

     - uses: subosito/flutter-action@v1
       with:
         channel: stable
     - uses: bluefireteam/melos-action@main

     - name: Example App - Build web app
       working-directory: ./packages/audioplayers/example
       run: |
         flutter pub get
         flutter build web

     - name: web integration test
       working-directory: ./packages/audioplayers/example
       run: |
         export DISPLAY=:99
         chromedriver --port=4444 &
         sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional

         flutter drive \
          --driver=test_driver/integration_test.dart \
          --target=integration_test/app_test.dart \
          -d web-server

  android:
    runs-on: macOS-latest

    steps:
     - uses: actions/checkout@v1

     - name: Setup Java 11
       uses: joschi/setup-jdk@v2
       with:
         java-version: 'openjdk11'
         architecture: 'x64'

     - name: Setup Android SDK
       uses: android-actions/setup-android@v2

     - uses: subosito/flutter-action@v1
       with:
         channel: stable
     - uses: bluefireteam/melos-action@main

     - name: Example App - Build android APK
       working-directory: ./packages/audioplayers/example
       run: |
         flutter pub get
         flutter build apk --release

     - name: Run android unit tests
       working-directory: ./packages/audioplayers/example/android
       run: |
         ./gradlew test

     - name: Download Android Emulator Image
       run: |
         export ANDROID_TOOLS="$ANDROID_HOME/cmdline-tools/latest/bin"
         echo "y" | $ANDROID_TOOLS/sdkmanager --install "system-images;android-30;google_apis;x86"
         echo "no" | $ANDROID_TOOLS/avdmanager create avd --force --name emu --device "Nexus 5X" -k 'system-images;android-30;google_apis;x86'
         $ANDROID_HOME/emulator/emulator -list-avds
     - name: "Start Android Emulator"
       timeout-minutes: 10
       run: |
         export ANDROID_TOOLS="$ANDROID_HOME/cmdline-tools/latest/bin"
         echo "Starting emulator"
         $ANDROID_TOOLS/sdkmanager "platform-tools" "platforms;android-30"
         nohup $ANDROID_HOME/emulator/emulator -avd emu -no-audio -no-snapshot -no-window &
         $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
         $ANDROID_HOME/platform-tools/adb devices
         echo "Emulator started"
     - name: "Run Flutter Driver tests"
       working-directory: ./packages/audioplayers/example
       run: "flutter test integration_test"

  ios:
    runs-on: macOS-latest

    steps:
     - uses: actions/checkout@v1

     - name: List all simulators
       run: "xcrun simctl list devices"
     - name: Start Simulator
       run: |
         UDID=$(xcrun simctl list devices | grep "iPhone" | sed -n 1p | awk -F '\\)? \\(' '{ print $2 }')
         echo "Using simulator $UUID"
         xcrun simctl boot "${UDID:?No Simulator with this name iPhone found}"

     - uses: subosito/flutter-action@v1
       with:
         channel: stable
     - uses: bluefireteam/melos-action@main

     - name: Example App - Build iOS
       working-directory: ./packages/audioplayers/example
       run: |
         flutter pub get
         flutter build ios --release --no-codesign
     - name: Run Flutter Driver tests
       working-directory: ./packages/audioplayers/example
       run: "flutter test integration_test"

  macos:
    runs-on: macOS-latest

    steps:
     - uses: actions/checkout@v1
     - uses: subosito/flutter-action@v1
       with:
         channel: stable
     - uses: bluefireteam/melos-action@main

     - name: setup-cocoapods
       uses: maxim-lobanov/setup-cocoapods@v1
       with:
         podfile-path: ./packages/audioplayers/example/macos/Podfile.lock
     - name: Example App - Build macOS
       working-directory: ./packages/audioplayers/example
       run: |
         flutter config --enable-macos-desktop
         flutter pub get
         flutter build macos --release
     - name: Run Flutter Driver tests
       working-directory: ./packages/audioplayers/example
       run: "flutter test -d macos integration_test"

  windows:
    runs-on: windows-latest

    steps:
     - uses: actions/checkout@v1
     - uses: subosito/flutter-action@v1
       with:
         channel: stable
     - uses: bluefireteam/melos-action@main
     - name: Example App - Build windows app
       working-directory: ./packages/audioplayers/example
       run: |
         flutter pub get
         flutter build windows --release
     - name: Run Flutter Driver tests
       working-directory: ./packages/audioplayers/example
       run: "flutter test -d windows integration_test"

  linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          channel: stable
      - uses: bluefireteam/melos-action@main
      - name: Install Flutter requirements for Linux
        run: sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
      - name: Install GStreamer
        run: sudo apt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
      - name: Example App - Build linux app
        working-directory: ./packages/audioplayers/example
        run: |
          flutter config --enable-linux-desktop
          flutter pub get
          flutter build linux --release
      - name: Run Flutter Driver tests
        working-directory: ./packages/audioplayers/example
        run: |
          export DISPLAY=:99
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
          flutter test -d linux integration_test
