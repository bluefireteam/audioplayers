name: build
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          channel: stable

      - name: Lint (analyze and format)
        run: ./scripts/lint.sh

      - name: Dartdoc
        run: ./scripts/dartdoc.sh

      - name: Run tests
        run: ./scripts/test.sh

  web:
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v1
     - uses: subosito/flutter-action@v1
       with:
         channel: stable

     - name: Example App - Build web app
       working-directory: ./packages/audioplayers/example
       run: |
         flutter pub get
         flutter build web

  android:
    runs-on: macOS-latest

    steps:
     - uses: malinskiy/action-android/install-sdk@release/0.0.8
     - uses: actions/checkout@v1
     - uses: subosito/flutter-action@v1
       with:
         channel: stable

     - name: Example App - Build android APK
       working-directory: ./packages/audioplayers/example
       run: |
         flutter pub get
         flutter build apk --release

     - name: Use specific Java version for sdkmanager to work
       uses: joschi/setup-jdk@v2
       with:
         java-version: 'openjdk8'
         architecture: 'x64'

     - name: Download Android Emulator Image
       run: |
         echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install "system-images;android-29;google_apis;x86"
         echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd --force --name emu --device "Nexus 5X" -k 'system-images;android-29;google_apis;x86'
         $ANDROID_HOME/emulator/emulator -list-avds
     - name: "Start Android Emulator"
       timeout-minutes: 10
       run: |
         echo "Starting emulator"
         ls "$ANDROID_HOME/tools/bin/"
         $ANDROID_HOME/tools/bin/sdkmanager "platform-tools" "platforms;android-28"
         echo "$ANDROID_HOME/platform-tools"
         ls "$ANDROID_HOME/"
         ls "$ANDROID_HOME/platform-tools"
         nohup $ANDROID_HOME/emulator/emulator -avd emu -no-audio -no-snapshot -no-window &
         $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
         $ANDROID_HOME/platform-tools/adb devices
         echo "Emulator started"
     - name: "Run Flutter Driver tests"
       working-directory: ./packages/audioplayers/example
       run: echo 'Skipped (WIP)'
       # run: "flutter drive --target=test_driver/app.dart"

  ios:
    runs-on: macOS-latest

    steps:
     - name: List all simulators
       run: "xcrun instruments -s"
     - name: Start Simulator
       run: |
         UDID=$(xcrun instruments -s | grep "iPhone" | sed -n 1p | awk -F ' *[][]' '{ print $2 }')
         echo "Using simulator $UUID"
         xcrun simctl boot "${UDID:?No Simulator with this name iPhone found}"
     - uses: actions/checkout@v1
     - uses: subosito/flutter-action@v1
       with:
         channel: stable
     - name: Example App - Build iOS
       working-directory: ./packages/audioplayers/example
       run: |
         flutter pub get
         flutter build ios --release --no-codesign
     - name: Run Flutter Driver tests
       working-directory: ./packages/audioplayers/example
       run: echo 'Skipped (WIP)'
       # run: "flutter drive --target=test_driver/app.dart"
